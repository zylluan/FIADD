<?xml version="1.0"?>
<launch>
    <!-- Posix SITL environment launch script -->
    <!-- launches PX4 SITL, Gazebo environment, and spawns vehicle -->
    <!-- vehicle pose -->
    <arg name="x" default="0"/>
    <arg name="y" default="0"/>
    <arg name="z" default="0"/>
    <arg name="R" default="0"/>
    <arg name="P" default="0"/>
    <arg name="Y" default="0"/>
    <!-- vehicle model and world -->
    <arg name="est" default="ekf2"/> <!--设置 PX4 使用的状态估计算法，这里默认是 ekf2-->
    <arg name="vehicle" default="iris"/>
    <arg name="world" default="$(find mavlink_sitl_gazebo)/worlds/empty.world"/>
    <arg name="sdf" default="$(find mavlink_sitl_gazebo)/models/$(arg vehicle)/$(arg vehicle).sdf"/>
    <!--env是设置环境变量。环境变量是要传递到/PX4-Autopilot/ROMFS/px4fmu_common/init.d-posix/rcS，也就是飞控启动脚本中的。-->
    <!--PX4_SIM_MODEL 可以是 iris、rover、boat等等-->
    <env name="PX4_SIM_MODEL" value="gazebo-classic_$(arg vehicle)" />



    <!-- gazebo configs 是否打开图形界面 调试模式 打印详细信息 启动时是否暂停仿真 是否在关闭后自动重启Gazebo-->
    <arg name="gui" default="true"/>
    <arg name="debug" default="false"/>
    <arg name="verbose" default="false"/>
    <arg name="paused" default="false"/>
    <arg name="respawn_gazebo" default="false"/>
    
    
    
    <!-- PX4 configs 控制 PX4 是交互模式（终端可输入）还是非交互（daemon）模式，如果 interactive=false，则加上 -d 参数，表示 PX4 作为后台运行。-->
    <arg name="interactive" default="true"/>
    <!-- PX4 SITL -->
    <arg unless="$(arg interactive)" name="px4_command_arg1" value="-d"/>
    <arg     if="$(arg interactive)" name="px4_command_arg1" value=""/>
    <!--设置node节点：第一个参数是node名字，随意；第二个是包名，对应PX4-Autopilot/ ；第三个是可执行文件名，对应PX4-Autopilot/build/px4_sitl_default/bin/px4 -->
    <node name="sitl" pkg="px4" type="px4" output="screen"
        args="$(find px4)/build/px4_sitl_default/etc -s etc/init.d-posix/rcS $(arg px4_command_arg1)" required="true"/>
        <!--args:build/px4_sitl_default/etc 是 PX4 启动目录,-s etc/init.d-posix/rcS 是初始化脚本,最后拼接的是 -d 参数——$(arg px4_command_arg1)（是否后台运行）-->





    <!-- Gazebo sim -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="gui" value="$(arg gui)"/>
        <arg name="world_name" value="$(arg world)"/>
        <arg name="debug" value="$(arg debug)"/>
        <arg name="verbose" value="$(arg verbose)"/>
        <arg name="paused" value="$(arg paused)"/>
        <arg name="respawn_gazebo" value="$(arg respawn_gazebo)"/>
    </include>
    <!-- gazebo model -->
    <node name="$(anon vehicle_spawn)" pkg="gazebo_ros" type="spawn_model" output="screen" args="-sdf -file $(arg sdf) -model $(arg vehicle) -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg R) -P $(arg P) -Y $(arg Y)"/>
    <!--anon 表示匿名命名，避免节点名冲突，-->
</launch>


<launch>
	<!-- 启动PX4中的SITL功能 -->
	<!-- 这里的环境变量将传递到rcS启动脚本中-->
	<!-- 模型选择 -->
	<!-- p450仿真模型 -->
	<!-- 参看 ~/PX4.../ROMFS/px4fmu_common/init.d-posix/1045_p450 中的修改内容 -->
	<env name="PX4_SIM_MODEL" value="p450" />
	<!-- 估计器参数选择 可选ekf2_vision和ekf2_gps-->
	<!-- ekf2_gps 使用GPS作为定位来源， ekf2_vision 使用外部输入（gazebo真值、slam等）作为定位来源-->
	<!-- 参看 ~/prometheus_px4/ROMFS/px4fmu_common/init.d-posix/rcS 中的修改内容 -->
	<!--<env name="PX4_ESTIMATOR" value="ekf2_vision " />-->
	<!-- 仿真速度因子 1.0代表与真实时间同步，大于1加快仿真速度，小于1则减慢 （电脑性能较差，可选择减小该参数）-->
	<env name="PX4_SIM_SPEED_FACTOR" value="1.0" />
	<!-- PX4 configs -->
    	<arg name="interactive" default="true"/>
    	<!-- PX4 SITL -->
	<arg unless="$(arg interactive)" name="px4_command_arg1" value="-d"/>
        <arg if="$(arg interactive)" name="px4_command_arg1" value=""/>
	<!-- 节点源文件路径: ~/prometheus_px4/platforms/posix/src/px4/common/main.cpp -->
	<!--  zy1  该节点启动了PX4 SITL仿真，通过指定rcS启动脚本加载PX4的配置。  -->
	<node name="sitl" pkg="px4" type="px4" output="screen" 
		args="$(find px4)/build/px4_sitl_default/etc -s etc/init.d-posix/rcS $(arg px4_command_arg1)"/>


	<!-- 启动Gazebo -->
	<!-- Gazebo configs -->
    	<arg name="gui" default="true"/>
   	<arg name="debug" default="false"/>
    	<arg name="verbose" default="false"/>
    	<arg name="paused" default="false"/>
    	<arg name="respawn_gazebo" default="false"/>
	<arg name="world" default="$(find my_uav)/worlds/leida.world"/>
    
	<!-- Gazebo sim -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="gui" value="$(arg gui)"/>
		<arg name="debug" value="$(arg debug)"/>
		<arg name="verbose" value="$(arg verbose)"/>
		<arg name="paused" value="$(arg paused)"/>
		<arg name="respawn_gazebo" value="$(arg respawn_gazebo)"/>
		<arg name="world_name" value="$(arg world)"/>
	 </include>

	<!-- Spawn vehicle model -->
    	<!-- 初始位置 -->
    	<arg name="x" default="0.0"/>
    	<arg name="y" default="0.0"/>
    	<arg name="z" default="0.2"/>
	<arg name="R" default="0.0"/>
    	<arg name="P" default="0.0"/>
    	<arg name="Y" default="0.0"/>
	<arg name="sdf" default="$(find my_uav)/models/p450/p450.sdf"/>
	<arg name="model" default="p450"/>
	
	<node name="$(anon vehicle_spawn)" pkg="gazebo_ros" type="spawn_model" output="screen" 
		args="-sdf -file $(arg sdf) -model $(arg model) -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg R) -P $(arg P) -Y $(arg Y)">
	</node>
	<!--  zy2 这部分代码通过spawn_model节点在Gazebo中加载p450无人机模型，并设置初始位置和姿态。 -->


</launch>
